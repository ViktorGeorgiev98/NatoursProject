/* ******************  MAIN STYLES ********************* */
/* !!!!!!!!!!!!!!!!!!!!!!
    Always convert px to REM, that is making design easier to work with.
    1 rem = 10px
    Default font size is 16px
    Always set it in the html tag
    It makes responsive web design very easy, because when you change the font size
    in the html tag you will change the size of everything because
    it is relative!!!!!
    Always set it as percentage, not hardcoded value!!!!
    divide 10/16 = 62.5% and use that!!!!!!
    !!!!!!!!!!!!!!!!!!!!!!!!!
*/
*,
*::after,
*::before {
  /* remove padding and margin */
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  /* set root font size here */
  font-size: 62.5%; }

body {
  box-sizing: border-box; }

/* ****************** END OF MAIN STYLES ********************* */
/* Complex animation using keyframes */
/* *********************** ANIMATIONS ******************** */
@keyframes moveInLeft {
  0% {
    /* When the animation starts */
    /* will make it invisible with opacity */
    opacity: 0;
    /* put negative value to be a lot to the left */
    transform: translateX(-10rem); }
  80% {
    /* during the animation */
    transform: translateX(1rem);
    /* this code will force it to the right and then return it. */ }
  100% {
    /* when the animation finishes */
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  /* same as the other one but mirrored */
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  /* same as the other one but mirrored */
  0% {
    opacity: 0;
    transform: translateY(10rem); }
  80% {
    transform: translateY(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

/* *********************** END OF ANIMATIONS ******************** */
body {
  /*  specify font family in body */
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* will hide any side effects from animations like jumping up or down */
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    /* initialize animation in element */
    /* You put the name of the animation you created */
    animation-name: moveInLeft;
    /* duration */
    animation-duration: 1s;
    /* delay until animation starts */
    /* animation-delay: 3s; */
    /* how many times the animation will happen */
    /* animation-iteration-count: 3; */
    /* how will the animation happen, slow, fast, or something else. It can also accelerate with time or slow down. */
    animation-timing-function: ease-out; }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation-name: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-out; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  -webkit-background-clip: text;
  color: transparent;
  transition: all 0.2s;
  letter-spacing: 2px; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center !important; }

.u-margin-bottom-8 {
  margin-bottom: 8rem !important; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem !important; }

.u-margin-bottom-medium {
  margin-bottom: 4rem !important; }
  @media only screen and (max-width: 56.25em) {
    .u-margin-bottom-medium {
      margin-bottom: 3rem !important; } }

.u-margin-bottom-big {
  margin-bottom: 8rem !important; }
  @media only screen and (max-width: 56.25em) {
    .u-margin-bottom-big {
      margin-bottom: 5rem !important; } }

.u-margin-top-big {
  margin-top: 8rem !important; }

.u-margin-top-huge {
  margin-top: 10rem !important; }

/* ************************************ */
/* **************   BUTTONS    ********************* */
.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  transition: all 0.2s;
  /* position connected to btn::after */
  position: relative;
  font-size: 1.6rem; }

.btn:hover {
  /* this will move it up */
  transform: translateY(-3px);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.3); }
  .btn:hover::after {
    /* only when we hove the after element */
    /* transition is set in the btn::after */
    /* You can scale using 2 values like below. */
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0; }

.btn:active {
  transform: translateY(-1px);
  /* this will move it up but less so in reality it will go down nicely */
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15); }

.btn--white {
  background-color: #fff;
  color: #777; }
  .btn--white::after {
    background-color: #fff; }

.btn::after {
  /* you always need to specify content and display properties, content can be empty */
  display: inline-block;
  content: "";
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  /* to make it absolute parent element MUST always be position relative!!!!! */
  /* In this case, this is the main button element. */
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  /* connected to btn:hover::after */
  transition: all 0.4s; }

.btn--animated {
  /* everything together can be done as well like below */
  animation: moveInBottom 0.5s ease-out 0.75s;
  /* below code will set time to 0 so the styles are applied before the animation starts */
  /* this will fix issues with delay. */
  /* The element will not be seen at first and pop up nicely */
  animation-fill-mode: backwards; }

/* ************************************ */
/* ************** END OF BUTTONS ********************* */
.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh; }

/* ********************************** */
/**************** HEADER **************/
.header {
  position: relative;
  height: 95vh;
  /* below code will make 2 colors, starting from one and going to the next */
  /* opacity is the fourth parameter in the colors, making the image blurred */
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.801), rgba(40, 180, 133, 0.801)), url("../img/hero.jpg");
  /* cover the whole element */
  background-size: cover;
  /* will not allow the image to be cropped at the top when making the screen smaller */
  background-position: top;
  /* make any element or image clipped on any side. Will make it cut where you need */
  /* 4 corners of the element, each having x and y. You specify each one like below */
  /* Left side is the reference so x is 0. You can touch y */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); }
  .header__logo-box {
    /* below position, top and bottom will put it in the top left corner with padding */
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center; }

/****************  **************/
/****************END OF HEADER **************/
.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
    @media only screen and (max-width: 56.25em) {
      .row:not(:last-child) {
        margin-bottom: 6rem; } }
  @media only screen and (max-width: 56.25em) {
    .row {
      max-width: 50rem;
      padding: 0 3rem; } }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
      @media only screen and (max-width: 56.25em) {
        .row [class^="col-"]:not(:last-child) {
          margin-right: 0;
          margin-bottom: 6rem; } }
    @media only screen and (max-width: 56.25em) {
      .row [class^="col-"] {
        width: 100% !important; } }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc(2 * ((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc(2 * ((100% - 3 * 6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc(3 * ((100% - 3 * 6rem) / 4) + 2 * 6rem); }
